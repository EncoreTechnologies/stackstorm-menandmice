---
version: 1.0

description: This is a workflow to delete DNS records out of Men&Mice

input:
  - connection
  - server
  - username
  - password
  - port
  - transport
  - session
  - dns_domain
  - ip_address
  - name

tasks:
  main:
    action: core.noop
    next:
      - when: "{{ succeeded() and (ctx().session == '') }}"
        do:
          - login
      - when: "{{ succeeded() and (ctx().session != '') }}"
        do:
          - get_dns_servers

  login:
    action: menandmice.login
    input:
      connection: "{{ ctx().connection }}"
      server: "{{ ctx().server }}"
      username: "{{ ctx().username }}"
      password: "{{ ctx().password }}"
      port: "{{ ctx().port }}"
      transport: "{{ ctx().transport }}"
    next:
      - when: "{{ succeeded() }}"
        publish:
          - session: "{{ result().result.session }}"
        do:
          - get_dns_servers

  get_dns_servers:
    action: menandmice.get_dns_servers
    input:
      server: "{{ ctx().server }}"
      session: "{{ ctx().session }}"
      transport: "{{ ctx().transport }}"
    next:
      - when: "{{ succeeded() }}"
        publish:
          - dns_server_refs: <% result().result.dnsServers.dnsServer.ref.flatten() %>
        do:
          - get_dns_zone

  get_dns_zone:
    action: menandmice.get_dns_zones
    input:
      server: "{{ ctx().server }}"
      session: "{{ ctx().session }}"
      transport: "{{ ctx().transport }}"
      filter: type:^Master$ name:^{{ ctx().dns_domain }}.$
    next:
      - when: "{{ succeeded() }}"
        publish:
          - dns_zone_ref: "{{ result().result.dnsZones.dnsZone[0].ref }}"
        do:
          - get_dns_record

  get_dns_record:
    action: menandmice.get_dns_records
    input:
      server: "{{ ctx().server }}"
      session: "{{ ctx().session }}"
      transport: "{{ ctx().transport }}"
      dns_zone_ref: "{{ ctx().dns_zone_ref }}"
      filter: name={{ ctx().name }} AND type:A
    next:
      - when: "{{ succeeded() }}"
        publish:
          - dns_record_ref: "{{ result().result.dnsRecords.dnsRecord[0].ref }}"
          - dns_record: "{{ result().result.dnsRecords.dnsRecord[0] }}"
        do:
          - get_related_records

  get_related_records:
    action: menandmice.get_related_dns_records
    input:
      server: "{{ ctx().server }}"
      session: "{{ ctx().session }}"
      transport: "{{ ctx().transport }}"
      dns_record_ref: "{{ ctx().dns_record_ref }}"
    next:
      - when: "{{ succeeded() }}"
        publish:
          - dns_releated_records_refs: "{{ result().result | map(attribute='ref') | list if result().result != None else [] }}"
          - dns_releated_records: "{{ result().result if result().result != None else [] }}"
        do:
          - merge_records

  merge_records:
    action: core.noop
    next:
      - when: "{{ succeeded() }}"
        publish:
          - records_to_remove: "{{ [ ctx().dns_record_ref ] + ctx().dns_releated_records_refs }}"
          - dns_records_to_flush: "{{ [ ctx().dns_record ] + ctx().dns_releated_records }}"
        do:
          - get_dns_ptr_record

  get_dns_ptr_record:
    action: menandmice.get_dnsptr_records
    input:
      server: "{{ ctx().server }}"
      session: "{{ ctx().session }}"
      transport: "{{ ctx().transport }}"
      address: "{{ ctx().ip_address }}"
      dns_zone_ref: "{{ ctx().dns_zone_ref }}"
    next:
      - when: "{{ succeeded() }}"
        publish:
          - records_to_remove: "{{ ctx().records_to_remove + [ result().result.reverseRecords.dnsRecord[0].ref ] if result().result.totalResults != 0 else ctx().records_to_remove }}"
          - dns_records_to_flush: "{{ ctx().dns_records_to_flush + [ result().result.reverseRecords.dnsRecord[0] ] if result().result.totalResults != 0 else ctx().dns_records_to_flush }}"
        do:
          - resolve_fqdn

  resolve_fqdn:
    with: "{{ ctx().dns_records_to_flush }}"
    action: menandmice.resolve_fqdn
    input:
      server: "{{ ctx().server }}"
      session: "{{ ctx().session }}"
      transport: "{{ ctx().transport }}"
      dns_zone_ref: "{{ item().dnsZoneRef }}"
      name: "{{ item().name }}"
    next:
      - when: "{{ succeeded() }}"
        publish:
          - entries_to_flush: <% result().output.fqdn %>
        do:
          - remove_dns_records

  remove_dns_records:
    action: menandmice.remove_objects
    input:
      server: "{{ ctx().server }}"
      session: "{{ ctx().session }}"
      transport: "{{ ctx().transport }}"
      obj_refs:
        ref: "{{ ctx().records_to_remove }}"
    next:
      - when: "{{ succeeded() }}"
        do:
          - flush_dns_cache

  flush_dns_cache:
    with: "{{ ctx().entries_to_flush }}"
    action: menandmice.flush_from_cache_on_dns_servers
    input:
      session: "{{ ctx().session }}"
      server: "{{ ctx().server }}"
      transport: "{{ ctx().transport }}"
      dns_server_refs:
        ref: "{{ ctx().dns_server_refs }}"
      entry: "{{ item() }}"
